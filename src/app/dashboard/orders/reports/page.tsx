"use client";

import { useState } from "react";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import {
  ChartContainer,
  ChartTooltip,
  ChartTooltipContent,
  ChartLegend,
  ChartLegendContent,
} from "@/components/ui/chart";
import { Bar, BarChart, Line, LineChart, Pie, PieChart, CartesianGrid, XAxis, YAxis, Cell } from "recharts";
import { Download } from "lucide-react";

const salesByProductData = [
  { product: "Laptop", sales: 50000 },
  { product: "Mouse", sales: 15000 },
  { product: "Keyboard", sales: 25000 },
  { product: "Monitor", sales: 30000 },
];

const salesByProductConfig = {
  sales: {
    label: "Sales",
    color: "hsl(var(--chart-1))",
  },
};

const salesByRegionData = [
  { region: "North", sales: 40000, orders: 200 },
  { region: "South", sales: 30000, orders: 150 },
  { region: "East", sales: 50000, orders: 250 },
  { region: "West", sales: 20000, orders: 100 },
];

const salesByRegionConfig = {
  sales: {
    label: "Sales",
    color: "hsl(var(--chart-1))",
  },
  orders: {
    label: "Orders",
    color: "hsl(var(--chart-2))",
  },
};

const orderStatusDistribution = [
  { name: "Completed", value: 70, color: "hsl(var(--chart-1))" },
  { name: "Pending", value: 20, color: "hsl(var(--chart-2))" },
  { name: "Cancelled", value: 10, color: "hsl(var(--chart-3))" },
];

const orderStatusConfig = {
  completed: { label: "Completed", color: "hsl(var(--chart-1))" },
  pending: { label: "Pending", color: "hsl(var(--chart-2))" },
  cancelled: { label: "Cancelled", color: "hsl(var(--chart-3))" },
};

export default function OrderReportsPage() {
  const [timeRange, setTimeRange] = useState("30d");

  return (
    <div className="flex flex-col gap-4 p-4 lg:gap-6 lg:p-6">
      <div className="flex items-center justify-between">
        <h1 className="text-xl font-semibold md:text-2xl">Order Reports</h1>
        <Select value={timeRange} onValueChange={setTimeRange}>
          <SelectTrigger className="w-[180px]">
            <SelectValue placeholder="Select a time range" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="7d">Last 7 days</SelectItem>
            <SelectItem value="30d">Last 30 days</SelectItem>
            <SelectItem value="90d">Last 90 days</SelectItem>
            <SelectItem value="1y">Last year</SelectItem>
          </SelectContent>
        </Select>
      </div>

      <Tabs defaultValue="sales-by-product" className="w-full">
        <TabsList className="grid w-full grid-cols-3">
          <TabsTrigger value="sales-by-product">Sales by Product</TabsTrigger>
          <TabsTrigger value="sales-by-region">Sales by Region</TabsTrigger>
          <TabsTrigger value="order-status">Order Status</TabsTrigger>
        </TabsList>

        <TabsContent value="sales-by-product" className="mt-4">
          <Card>
            <CardHeader>
              <CardTitle>Sales Performance by Product</CardTitle>
              <CardDescription>Total sales generated by each product.</CardDescription>
            </CardHeader>
            <CardContent>
              <ChartContainer config={salesByProductConfig} className="h-[300px]">
                <BarChart accessibilityLayer data={salesByProductData}>
                  <CartesianGrid vertical={false} />
                  <XAxis
                    dataKey="product"
                    tickLine={false}
                    tickMargin={10}
                    axisLine={false}
                  />
                  <YAxis
                    tickLine={false}
                    axisLine={false}
                    tickFormatter={(value) => `$${value / 1000}k`}
                  />
                  <ChartTooltip
                    cursor={false}
                    content={<ChartTooltipContent />} 
                  />
                  <ChartLegend content={<ChartLegendContent />} />
                  <Bar dataKey="sales" fill="var(--color-sales)" radius={4} />
                </BarChart>
              </ChartContainer>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="sales-by-region" className="mt-4">
          <Card>
            <CardHeader>
              <CardTitle>Sales Performance by Region</CardTitle>
              <CardDescription>Sales and number of orders across different regions.</CardDescription>
            </CardHeader>
            <CardContent>
              <ChartContainer config={salesByRegionConfig} className="h-[300px]">
                <LineChart accessibilityLayer data={salesByRegionData}>
                  <CartesianGrid vertical={false} />
                  <XAxis
                    dataKey="region"
                    tickLine={false}
                    axisLine={false}
                    tickMargin={8}
                  />
                  <YAxis yAxisId="left" stroke="var(--color-sales)" />
                  <YAxis yAxisId="right" orientation="right" stroke="var(--color-orders)" />
                  <ChartTooltip
                    cursor={false}
                    content={<ChartTooltipContent />} 
                  />
                  <ChartLegend content={<ChartLegendContent />} />
                  <Line
                    yAxisId="left"
                    dataKey="sales"
                    type="monotone"
                    stroke="var(--color-sales)"
                    strokeWidth={2}
                    dot={false}
                  />
                  <Line
                    yAxisId="right"
                    dataKey="orders"
                    type="monotone"
                    stroke="var(--color-orders)"
                    strokeWidth={2}
                    dot={false}
                  />
                </LineChart>
              </ChartContainer>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="order-status" className="mt-4">
          <Card>
            <CardHeader>
              <CardTitle>Order Status Distribution</CardTitle>
              <CardDescription>Breakdown of orders by their current status.</CardDescription>
            </CardHeader>
            <CardContent className="flex items-center justify-center">
              <ChartContainer config={orderStatusConfig} className="h-[250px] w-full">
                <PieChart>
                  <ChartTooltip
                    cursor={false}
                    content={<ChartTooltipContent nameKey="name" />} 
                  />
                  <Pie
                    data={orderStatusDistribution}
                    dataKey="value"
                    nameKey="name"
                    innerRadius={60}
                    outerRadius={100}
                    strokeWidth={2}
                    startAngle={90}
                    endAngle={-270}
                  >
                    {orderStatusDistribution.map((entry, index) => (
                      <Cell key={`cell-${index}`} fill={entry.color} />
                    ))}
                  </Pie>
                  <ChartLegend
                    content={<ChartLegendContent nameKey="name" />} 
                    className="flex-wrap justify-center gap-2 pt-2"
                  />
                </PieChart>
              </ChartContainer>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>

      <div className="flex justify-end">
        <Button variant="outline">
          <Download className="mr-2 h-4 w-4" /> Export Report
        </Button>
      </div>
    </div>
  );
}
